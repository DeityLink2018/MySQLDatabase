#!/usr/bin/env python3

#Imported Moduels
import MySQLdb
import pandas as pd
import os
import csv
import time
from sqlalchemy import create_engine


#Function to view the database
def PrintDB(database, table):
        #Password is assumed "root", if differnet change the password to your root password
        db = MySQLdb.connect(host="localhost", user="root", db=database)
          
        cur = db.cursor()
        cur.execute("SELECT * FROM " + table)

        for row in cur.fetchall():
               print(row[0], row[1], row[2], row[3], row[4], row[5], row[6], row[7])
               #[0], row[1], row[2], row[3], row[4], row[5]
               
def UpdateDB(file, database, table ):
        #Opens and Reads timport os
        df = pd.read_csv(file, header = 0)
        
        #Connects and uploads csv file to MySQL Database
        engine = create_engine('mysql://root:@localhost/'+ database)
        with engine.connect() as conn, conn.begin():
                df.to_sql(table , conn, if_exists='append', index=False)

#def CreateDatabase():

#def CreateTables():

def clear():
        from os import system, name 
        if name == 'nt': 
                _ = system('cls') 
  
        # for mac and linux(here, os.name is 'posix') 
        else: 
                _ = system('clear') 

def main():
        #Checks that user has root priviliges
        user = os.getenv("SUDO_USER")
        if user is None:
                print("This program need 'sudo'")
                exit()
                
        while True:
                clear()
                print("SQL Database Import")
                print("""
Welcome to SQL Database Import Script. This script uses csv files with names for each collum. You must have your Database and Table already set up within MySQL. Creating Databases and Tables will be a feature later added to this script.\n 
                """) 
                choice = input("""Please select from the following menu choices
                1) View Database
                2) Update Database
                3) Exit
                
                ---> """)
                if choice == "1":
                        while True:
                                database = input("Database: ")
                                try:
                                        CheckDatabase(database)
                                        break
                                except MySQLdb._exceptions.OperationalError:
                                        print(database + " database not found")
                        while True:
                                table = input("Table: ")
                                try:
                                        CheckTable(database, table)
                                        break
                                except :
                                       print(table + " table not found")
                        PrintDB(database, table)
                        time.sleep(3)
                        print("\n")
                elif choice == "2":
                        while True:
                                fp = input("File Path for CSV file: ")
                                try:
                                        CheckFile(fp)
                                        break
                                except FileNotFoundError:
                                        print(fp + " can not be located. Please type to correct full file path.")
                        while True:
                                database = input("Database: ")
                                try:
                                        CheckDatabase(database)
                                except MySQLdb._exceptions.OperationalError:
                                        print(database + " database not found")
                        while True:
                                table = input("Table: ")
                                try:
                                        CheckTable(database, table)
                                        break
                                except :
                                       print(table + " table not found")
                        UpdateDB(fp, database, table)
                elif choice == "3":
                        clear()
                        break
                else:
                        print("*** " + choice + " not found ***")
                        time.sleep(3)

#The Below functions help validate user input.

def CheckFile(ftc):
        gfp = open(fp)
        gfp.close
        
def CheckDatabase(database):
        db = MySQLdb.connect(host="localhost", user="root", db=database)

def CheckTable(database, table):
        db = MySQLdb.connect(host="localhost", user="root", db=database)
        cur = db.cursor()
        cur.execute("SELECT * FROM " + table)
                
main()
